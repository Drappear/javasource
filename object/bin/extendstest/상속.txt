클래스 상속
    기존의 클래스를 재사용하여 새로운 클래스 작성
    코드의 재사용성이 높아지고 중복을 제거할 수 있다

    상속이 되는 것
        1) 멤버
        2) 메소드
    상속 되지 않는 것
        1) 생성자
        2) 초기화 블록

    자손 클래스의 멤버 개수는 조상 클래스보다 많거나 같다

    단일 상속만 가능

    조상 클래스 : 부모, 상위(super), 기반(base)클래스
    자손 클래스 : 자식, 하위(sub), 파생(derived)클래스

    클래스 관계
        1) 상속관계
        2) 포함관계

        ex) 원은 점이다. (is a) : Circle extends Point
            원은 점을 가지고 있다.
            class Circle{
                Point p = new Point();
            }
            원은 도형이다. -> 상속관계
    
    오버로딩 : 하나의 클래스에 생성자가 여러개 존재하거나 메소드가 여러개 존재

    오버라이딩(@Override 어노테이션 사용) : 상속관계에서 나옴
                                            자식 클래스에서 부모 클래스의 메소드를 재정의 하는 것

    모든 클래스의 조상 : Object
        - 모든 클래스의 상속 계층도의 최상위에 위치
        - 자동으로 상속받는다
        - ex) toString(), equals()... 
        


