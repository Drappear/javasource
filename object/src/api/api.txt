API Documentation
    - API : Application Programming Interface
            라이브러리

    - JAVA SE(Standard Edition) : 데스크탑 어플리케이션 개발
    - JAVA EE(Enterprise Edition) : 기업용 어플리케이션 개발


- 주요 클래스
  1) 문자열 : String(+ StringBuffer)
  2) 날짜/시간 : Date(java.util), LocalDate, LocalTime, LocalDateTime
  3) 키보드 입력 : Scanner
  4) 수학 : Math
  5) 컬렉션 프레임워크 : 자료구조 개념이 적용된 클래스
     데이터를 저장하는 여러 방식의 클래스

     Collection 인터페이스
        - Set 인터페이스 
              순서를 유지하지 않는 데이터 집합
              데이터 중복 불가()
              구현 클래스 - HashSet, TreeSet...
        - List 인터페이스
              순서가 있는 데이터의 집합
              중복 허용
              구현 클래스 - ArrayList(== 배열), LinkedList, Stack, Vector...
                            배열 구조의 단점 : 크기 변경 불가(큰 크기의 배열 생성 필요 -> 메모리 낭비)
                                               비순차적인 데이터의 추가 및 삭제에 시간이 많이 걸림
                                               차례대로 데이터를 추가하고 마지막부터 데이터를 삭제하는건 빠르나
                                               배열 중간에 데이터를 추가하는데 시간이 소요됨
        - Stack과 Queue
            Stack : LIFO(List in First Out)
            Queue : FIFO(First in First Out)

     Map 인터페이스
         키와 값의 쌍으로 이루어진 데이터 집합
         순서 유지하지 않음
         키는 중복불가, 값은 중복 허용
         구현 클래스 - HashMap, TreeMap...

    Arrays : 배열을 다루는데 유용한 메소드가 정의되어 있음
        - Arrays.toString()
        - sort(), binarySearch()

    Iterator : 컬렉션에 저장된 요소 접근시 사용
               컬렉션에 저장된 요소들을 읽어오는 방법 : 표준화
               구 버전으로 Enumeration
               hasNext() / next() / remove()
